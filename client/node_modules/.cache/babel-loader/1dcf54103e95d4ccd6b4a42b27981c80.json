{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Projects/DevConnector-master/client/src/components/post/Post.js\";\nimport React, { useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport PostItem from './PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\nimport { loadUser } from '../../actions/auth';\nimport store from '../../store';\n\nconst Post = props => {\n  //this route is made as private here because I was unable to access props.match.params.id when it use PrivateRoute\n  if (!props.isAuthenticated && !props.loading) {\n    props.history.push('/login');\n  } //i'm loading authenticated user here before loading all posts, because loading a user (in App.js) is taking more time as compared to that of loading the posts (here).\n  //so before doing it, props.user._id was undefined because user was loading after loading of posts.\n  //now, here user is loading before loading of posts, so props.user._id is defined now.\n  //despite of this, sometimes (1 out of 10) posts are loaded before user, while refreshing.\n  //->from next time, you should use async await...\n  //this problem could be solved by delaying, so in that time user will be loaded also (in App.js)\n\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  useEffect(() => {\n    store.dispatch(getPost(props.match.params.id));\n  }, []); //  console.log(props.match.params);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.loading || props.post == null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: props.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: props.post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(CommentItem, {\n    post: props.post,\n    postId: props.post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  post: state.post_reducer.post,\n  loading: state.post_reducer.loading,\n  isAuthenticated: state.auth_reducer.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(withRouter(Post));","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/components/post/Post.js"],"names":["React","useEffect","Link","withRouter","connect","Moment","moment","PostItem","CommentForm","CommentItem","getPost","loadUser","store","Post","props","isAuthenticated","loading","history","push","dispatch","match","params","id","post","_id","mapStateToProps","state","post_reducer","auth_reducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEpB;AACA,MAAG,CAACA,KAAK,CAACC,eAAP,IAA0B,CAAED,KAAK,CAACE,OAArC,EAA6C;AACzCF,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,GALmB,CAOnB;AACD;AACA;AACA;AACJ;AACI;;;AAECjB,EAAAA,SAAS,CAAC,MAAM;AACTW,IAAAA,KAAK,CAACO,QAAN,CAAeR,QAAQ,EAAvB;AACL,GAFO,EAEL,EAFK,CAAT;AAIHV,EAAAA,SAAS,CAAC,MAAM;AACNW,IAAAA,KAAK,CAACO,QAAN,CAAeT,OAAO,CAACI,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAtB;AACL,GAFI,EAEF,EAFE,CAAT,CAlBsB,CAsBxB;;AAIG,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACER,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACS,IAAN,IAAa,IAA/B,GAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxC,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAET,KAAK,CAACS,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAET,KAAK,CAACS,IAAN,CAAWC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEV,KAAK,CAACS,IAAzB;AAA+B,IAAA,MAAM,EAAET,KAAK,CAACS,IAAN,CAAWC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFL,CADJ;AAYF,CAtCD;;AAyCA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,IAAI,EAAEG,KAAK,CAACC,YAAN,CAAmBJ,IADO;AAEhCP,EAAAA,OAAO,EAAEU,KAAK,CAACC,YAAN,CAAmBX,OAFI;AAGhCD,EAAAA,eAAe,EAAEW,KAAK,CAACE,YAAN,CAAmBb;AAHJ,CAAL,CAA7B;;AAMA,eAAeX,OAAO,CAACqB,eAAD,EAAiB;AAAEf,EAAAA;AAAF,CAAjB,CAAP,CAAqCP,UAAU,CAACU,IAAD,CAA/C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport PostItem from './PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\nimport { loadUser } from '../../actions/auth';\nimport store from '../../store';\n\n\nconst Post = (props) => {\n    \n    //this route is made as private here because I was unable to access props.match.params.id when it use PrivateRoute\n    if(!props.isAuthenticated && ! props.loading){\n        props.history.push('/login');\n    }\n    \n     //i'm loading authenticated user here before loading all posts, because loading a user (in App.js) is taking more time as compared to that of loading the posts (here).\n    //so before doing it, props.user._id was undefined because user was loading after loading of posts.\n    //now, here user is loading before loading of posts, so props.user._id is defined now.\n    //despite of this, sometimes (1 out of 10) posts are loaded before user, while refreshing.\n//->from next time, you should use async await...\n    //this problem could be solved by delaying, so in that time user will be loaded also (in App.js)\n    \n     useEffect(() => {\n            store.dispatch(loadUser());\n      }, []);\n     \n  useEffect(() => {\n            store.dispatch(getPost(props.match.params.id));\n      }, []);\n    \n//  console.log(props.match.params);\n   \n    \n    \n   return(\n       <div>\n       {(props.loading || props.post ==null) ?  <div>loading...</div> : (    \n            <div>\n                <Link to='/posts' className='btn'>Back To Posts</Link>\n                <PostItem post={props.post} />\n                <CommentForm postId={props.post._id} />\n                <CommentItem post={props.post} postId={props.post._id} />\n            </div>\n        )}\n       </div>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n  post: state.post_reducer.post,\n  loading: state.post_reducer.loading,\n  isAuthenticated: state.auth_reducer.isAuthenticated\n});\n\nexport default connect(mapStateToProps,{ getPost })(withRouter(Post));\n"]},"metadata":{},"sourceType":"module"}