{"ast":null,"code":"import _defineProperty from \"/home/prashant/Projects/DevConnector-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nlet initialState = {\n  post: null,\n  posts: [],\n  loading: true,\n  error: null\n};\n\nconst post_reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POST:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        post: action.data\n      });\n\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        posts: action.data\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.data,\n        posts: [],\n        post: null\n      });\n\n    case UPDATE_LIKES:\n      let posts_1 = state.posts.map(post => {\n        if (post._id === action.data.id) {\n          post.likes = action.data.likes;\n        }\n\n        return post;\n      });\n      return _objectSpread({}, state, {\n        loading: false,\n        posts: posts_1,\n        error: null\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        loading: false,\n        posts: [action.data, ...state.posts],\n        error: null\n      });\n\n    case DELETE_POST:\n      let posts_3 = state.posts.filter(post => {\n        return post._id !== action.data;\n      });\n      return _objectSpread({}, state, {\n        loading: false,\n        posts: posts_3,\n        error: null\n      });\n\n    case ADD_COMMENT:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: action.data\n        }),\n        loading: false,\n        error: null\n      });\n\n    case REMOVE_COMMENT:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: action.data\n        }),\n        loading: false,\n        error: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default post_reducer;","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","post","posts","loading","error","post_reducer","state","action","type","data","posts_1","map","_id","id","likes","posts_3","filter","comments"],"mappings":";;;;;;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,YAA/B,EAA6CC,WAA7C,EAA0DC,QAA1D,EAAoEC,QAApE,EAA8EC,WAA9E,EAA2FC,cAA3F,QAAgH,kBAAhH;AAGA,IAAIC,YAAY,GAAC;AACbC,EAAAA,IAAI,EAAC,IADQ;AAEbC,EAAAA,KAAK,EAAC,EAFO;AAGbC,EAAAA,OAAO,EAAC,IAHK;AAIbC,EAAAA,KAAK,EAAC;AAJO,CAAjB;;AAOA,MAAMC,YAAY,GAAC,CAACC,KAAK,GAACN,YAAP,EAAqBO,MAArB,KAA+B;AAE9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,QAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,OAAO,EAAC,KAFZ;AAGIC,QAAAA,KAAK,EAAC,IAHV;AAIIH,QAAAA,IAAI,EAACM,MAAM,CAACE;AAJhB;;AAML,SAAKjB,SAAL;AACK,+BACOc,KADP;AAEIH,QAAAA,OAAO,EAAC,KAFZ;AAGIC,QAAAA,KAAK,EAAC,IAHV;AAIIF,QAAAA,KAAK,EAACK,MAAM,CAACE;AAJjB;;AAML,SAAKhB,UAAL;AACK,+BACOa,KADP;AAEIH,QAAAA,OAAO,EAAC,KAFZ;AAGIC,QAAAA,KAAK,EAACG,MAAM,CAACE,IAHjB;AAIIP,QAAAA,KAAK,EAAC,EAJV;AAKID,QAAAA,IAAI,EAAC;AALT;;AAOL,SAAKP,YAAL;AAEK,UAAIgB,OAAO,GAAEJ,KAAK,CAACJ,KAAN,CAAYS,GAAZ,CAAgBV,IAAI,IAAG;AAChC,YAAGA,IAAI,CAACW,GAAL,KAAWL,MAAM,CAACE,IAAP,CAAYI,EAA1B,EAA6B;AACzBZ,UAAAA,IAAI,CAACa,KAAL,GAAWP,MAAM,CAACE,IAAP,CAAYK,KAAvB;AACH;;AACD,eAAOb,IAAP;AACH,OALY,CAAb;AAMA,+BACOK,KADP;AAEIH,QAAAA,OAAO,EAAC,KAFZ;AAGID,QAAAA,KAAK,EAACQ,OAHV;AAIIN,QAAAA,KAAK,EAAC;AAJV;;AAMJ,SAAKR,QAAL;AACI,+BACOU,KADP;AAEIH,QAAAA,OAAO,EAAC,KAFZ;AAGID,QAAAA,KAAK,EAAC,CAACK,MAAM,CAACE,IAAR,EAAc,GAAGH,KAAK,CAACJ,KAAvB,CAHV;AAIIE,QAAAA,KAAK,EAAC;AAJV;;AAMJ,SAAKT,WAAL;AAEI,UAAIoB,OAAO,GAAET,KAAK,CAACJ,KAAN,CAAYc,MAAZ,CAAmBf,IAAI,IAAG;AACnC,eAAQA,IAAI,CAACW,GAAL,KAAWL,MAAM,CAACE,IAA1B;AACH,OAFY,CAAb;AAGA,+BACOH,KADP;AAEIH,QAAAA,OAAO,EAAC,KAFZ;AAGID,QAAAA,KAAK,EAACa,OAHV;AAIIX,QAAAA,KAAK,EAAC;AAJV;;AAMJ,SAAKN,WAAL;AACI,+BACOQ,KADP;AAEIL,QAAAA,IAAI,oBAAKK,KAAK,CAACL,IAAX;AAAiBgB,UAAAA,QAAQ,EAACV,MAAM,CAACE;AAAjC,UAFR;AAGIN,QAAAA,OAAO,EAAC,KAHZ;AAIIC,QAAAA,KAAK,EAAC;AAJV;;AAMJ,SAAKL,cAAL;AACI,+BACOO,KADP;AAEIL,QAAAA,IAAI,oBAAMK,KAAK,CAACL,IAAZ;AAAkBgB,UAAAA,QAAQ,EAAEV,MAAM,CAACE;AAAnC,UAFR;AAGIN,QAAAA,OAAO,EAAC,KAHZ;AAIIC,QAAAA,KAAK,EAAC;AAJV;;AAQJ;AACI,aAAOE,KAAP;AAxER;AA2EH,CA7ED;;AA+EA,eAAeD,YAAf","sourcesContent":["import {GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT} from '../actions/types';\n\n\nlet initialState={\n    post:null,\n    posts:[],\n    loading:true,\n    error:null,\n}\n\nconst post_reducer=(state=initialState, action)=> {\n    \n    switch(action.type){\n        case GET_POST:\n            return{\n                ...state,\n                loading:false,\n                error:null,\n                post:action.data,\n            }\n       case GET_POSTS:\n            return{\n                ...state,\n                loading:false,\n                error:null,\n                posts:action.data,\n            }\n       case POST_ERROR:\n            return{\n                ...state,\n                loading:false,\n                error:action.data,\n                posts:[],\n                post:null\n            }\n       case UPDATE_LIKES:\n            \n            let posts_1= state.posts.map(post=> {\n                if(post._id===action.data.id){\n                    post.likes=action.data.likes\n                }\n                return post;\n            })\n            return{\n                ...state,\n                loading:false,\n                posts:posts_1,\n                error:null\n            }\n        case ADD_POST:\n            return{\n                ...state,\n                loading:false,\n                posts:[action.data, ...state.posts],\n                error:null\n            }\n        case DELETE_POST:\n            \n            let posts_3= state.posts.filter(post=> {\n                return (post._id!==action.data)    \n            })\n            return{\n                ...state,\n                loading:false,\n                posts:posts_3,\n                error:null\n            }\n        case ADD_COMMENT:\n            return{\n                ...state,\n                post:{...state.post, comments:action.data},\n                loading:false,\n                error:null,\n            }\n        case REMOVE_COMMENT:\n            return{\n                ...state,\n                post: {...state.post, comments: action.data},\n                loading:false,\n                error:null,\n            }\n            \n            \n        default:\n            return state;\n            \n    }\n}\n\nexport default post_reducer"]},"metadata":{},"sourceType":"module"}