{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Projects/DevConnector-master/client/src/components/routing/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = props => React.createElement(Route, {\n  render: () => !props.isAuthenticated && !props.loading ? React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }) : React.createElement(props.component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n});\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth_reducer.isAuthenticated,\n  loading: state.auth_reducer.loading\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PrivateRoute","props","isAuthenticated","loading","mapStateToProps","state","auth_reducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IACnB,oBAAC,KAAD;AACE,EAAA,MAAM,EAAE,MAAO,CAAEA,KAAK,CAACC,eAAR,IAA2B,CAAED,KAAK,CAACE,OAApC,GAAkD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlD,GAA+E,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAOA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,eAAe,EAAEG,KAAK,CAACC,YAAN,CAAmBJ,eADJ;AAEhCC,EAAAA,OAAO,EAACE,KAAK,CAACC,YAAN,CAAmBH;AAFK,CAAL,CAA7B;;AAKA,eAAeJ,OAAO,CAACK,eAAD,CAAP,CAAyBJ,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = (props) => (\n  <Route \n    render={() => (! props.isAuthenticated && ! props.loading ) ? ( <Redirect to='/login' />) : (<props.component />)\n  }/>\n);\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth_reducer.isAuthenticated,\n  loading:state.auth_reducer.loading\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}