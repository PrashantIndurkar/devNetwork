{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Projects/DevConnector-master/client/src/components/profiles/Profiles.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\nimport store from '../../store';\n\nconst Profiles = props => {\n  useEffect(() => {\n    store.dispatch(getProfiles());\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" loading.. \") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Developers\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \" Browse and connect with developers\"), React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.profiles.length > 0 ? props.profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"No profiles found...\"))));\n};\n\nconst mapStateToProps = state => ({\n  profiles: state.profile_reducer.profiles,\n  loading: state.profile_reducer.loading\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/components/profiles/Profiles.js"],"names":["React","useEffect","connect","ProfileItem","getProfiles","store","Profiles","props","dispatch","loading","profiles","length","map","profile","_id","mapStateToProps","state","profile_reducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAGxBN,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACG,QAAN,CAAeJ,WAAW,EAA1B;AACD,GAFM,EAEJ,EAFI,CAAT;AAIE,SAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,KAAK,CAACE,OAAN,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjB,GAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wCAHF,EAOE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,QAAN,CAAeC,MAAf,GAAwB,CAAxB,GAA8BJ,KAAK,CAACG,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IACrD,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA1B;AAA+B,IAAA,OAAO,EAAED,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD2B,CAA9B,GAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,CAPF,CAHD,CAFL;AAyBL,CAhCD;;AAmCA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,QAAQ,EAAEM,KAAK,CAACC,eAAN,CAAsBP,QADA;AAEhCD,EAAAA,OAAO,EAAEO,KAAK,CAACC,eAAN,CAAsBR;AAFC,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACa,eAAD,EAAiB;AAAEX,EAAAA;AAAF,CAAjB,CAAP,CAAyCE,QAAzC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\nimport store from '../../store';\n\nconst Profiles = (props) => {\n    \n    \n    useEffect(() => {\n        store.dispatch(getProfiles());\n      }, []);\n\n      return (\n          \n           <div>\n            {props.loading ? (<div> loading.. </div>) : (\n             \n            <div>\n           \n              <h1 className='large text-primary'>Developers</h1>\n              <p className='lead'>\n                <i className='fab fa-connectdevelop' /> Browse and connect with developers\n              </p>\n           \n              <div className='profiles'>\n                {props.profiles.length > 0 ? ( props.profiles.map(profile => (\n                    <ProfileItem key={profile._id} profile={profile} />\n                  ))\n                ) : (\n                  <h4>No profiles found...</h4>\n                )}\n              </div>\n\n            </div>\n            )}\n           </div>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n  profiles: state.profile_reducer.profiles,\n  loading: state.profile_reducer.loading\n});\n\nexport default connect(mapStateToProps,{ getProfiles })(Profiles);\n"]},"metadata":{},"sourceType":"module"}