{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport auth_reducer from './reducers/auth';\nimport alert_reducer from './reducers/alert';\nimport profile_reducer from './reducers/profile';\nimport post_reducer from './reducers/post'; //store arguments\n\nconst combinedReducer = combineReducers({\n  auth_reducer: auth_reducer,\n  alert_reducer: alert_reducer,\n  profile_reducer: profile_reducer,\n  post_reducer: post_reducer\n});\nconst initialState = {};\nconst middleware = [thunk]; //creating store\n\nconst store = createStore(combinedReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","auth_reducer","alert_reducer","profile_reducer","post_reducer","combinedReducer","initialState","middleware","store","subscribe","console","log","getState"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAGA;;AACA,MAAMC,eAAe,GAAER,eAAe,CAAC;AACnCI,EAAAA,YAAY,EAACA,YADsB;AAEnCC,EAAAA,aAAa,EAACA,aAFqB;AAGnCC,EAAAA,eAAe,EAACA,eAHmB;AAInCC,EAAAA,YAAY,EAACA;AAJsB,CAAD,CAAtC;AAMA,MAAME,YAAY,GAAE,EAApB;AACA,MAAMC,UAAU,GAAG,CAACP,KAAD,CAAnB,C,CAGA;;AACA,MAAMQ,KAAK,GAACZ,WAAW,CACfS,eADe,EAEfC,YAFe,EAGfP,mBAAmB,CAACD,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAHJ,CAAvB;AAOAC,KAAK,CAACC,SAAN,CAAgB,MAAK;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACH,CAFD;AAKA,eAAeJ,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport auth_reducer from './reducers/auth';\nimport alert_reducer from './reducers/alert';\nimport profile_reducer from './reducers/profile';\nimport post_reducer from './reducers/post';\n\n\n//store arguments\nconst combinedReducer= combineReducers({\n    auth_reducer:auth_reducer,\n    alert_reducer:alert_reducer,\n    profile_reducer:profile_reducer,\n    post_reducer:post_reducer\n})\nconst initialState= {};\nconst middleware = [thunk];\n\n\n//creating store\nconst store=createStore(\n        combinedReducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(...middleware))\n);\n\n\nstore.subscribe(()=> {\n    console.log(store.getState());\n})\n\n\nexport default store;\n\n\n"]},"metadata":{},"sourceType":"module"}