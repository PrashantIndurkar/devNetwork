{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'; //getting all posts\n\nexport const getPosts = () => dispatch => {\n  axios.get('/posts').then(response => {\n    console.log(response.data);\n    dispatch({\n      type: GET_POSTS,\n      data: response.data\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      data: err.response.data\n    });\n  });\n}; //updating (like/unlike) likes of a post.. id is post_id\n\nexport const updateLikes = id => dispatch => {\n  axios.put(\"/posts/likes/\".concat(id)).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: UPDATE_LIKES,\n      data: {\n        id,\n        likes: response.data\n      }\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      data: err.response.data\n    });\n  });\n}; //deleting a post.. id is post_id\n\nexport const deletePost = id => dispatch => {\n  axios.delete(\"/posts/\".concat(id)).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: DELETE_POST,\n      data: id\n    });\n    dispatch(setAlert(\"Post removed\", \"success\"));\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      data: err.response.data\n    });\n  });\n}; //adding a post\n\nexport const addPost = formData => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.post('/posts', formData, config).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: ADD_POST,\n      data: response.data\n    });\n    dispatch(setAlert(\"Post created\", \"success\"));\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      data: err.response.data\n    });\n  });\n}; //getting a post by post_id\n\nexport const getPost = id => dispatch => {\n  axios.get(\"/posts/\".concat(id)).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: GET_POST,\n      data: response.data\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      data: err.response.data\n    });\n  });\n}; //adding a comment to a post... id is post_id\n\nexport const addComment = (formData, id) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.post(\"/posts/comment/\".concat(id), formData, config).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: ADD_COMMENT,\n      data: response.data\n    });\n    dispatch(setAlert(\"Comment added\", \"success\"));\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      data: err.response.data\n    });\n  });\n}; //deleting a post.. id is post_id\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(\"/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: REMOVE_COMMENT,\n      data: response.data\n    });\n    dispatch(setAlert(\"Comment removed\", \"success\"));\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      data: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","get","then","response","console","log","data","type","catch","err","updateLikes","id","put","likes","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","deleteComment","postId","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT} from './types';\n\n\n\n//getting all posts\nexport const getPosts=()=> dispatch => {\n    \n    axios.get('/posts').then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:GET_POSTS,\n            data:response.data\n        })\n        \n    }).catch(err=> {\n        \n        console.log(err.response);\n        dispatch({\n            type:POST_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n//updating (like/unlike) likes of a post.. id is post_id\nexport const updateLikes=(id)=> dispatch => {\n    \n    axios.put(`/posts/likes/${id}`).then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:UPDATE_LIKES,\n            data:{id, likes: response.data}\n        })\n        \n    }).catch(err=> {\n        \n        console.log(err.response);\n        dispatch({\n            type:POST_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n\n//deleting a post.. id is post_id\nexport const deletePost=(id)=> dispatch => {\n    \n    axios.delete(`/posts/${id}`).then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:DELETE_POST,\n            data:id\n        })\n        \n        dispatch(setAlert(\"Post removed\", \"success\"));\n        \n    }).catch(err=> {\n        \n        console.log(err.response);\n        dispatch({\n            type:POST_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n\n//adding a post\nexport const addPost=(formData)=> dispatch => {\n    \n    const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n    \n    axios.post('/posts',formData, config).then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:ADD_POST,\n            data:response.data\n        })\n        \n        dispatch(setAlert(\"Post created\", \"success\"));\n        \n    }).catch(err=> {\n        \n        console.log(err.response);\n        dispatch({\n            type:POST_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n\n//getting a post by post_id\nexport const getPost=(id)=> dispatch => {\n    \n    \n    axios.get(`/posts/${id}`).then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:GET_POST,\n            data:response.data\n        })\n        \n    }).catch(err=> {\n        \n        console.log(err.response);\n        dispatch({\n            type:POST_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n\n//adding a comment to a post... id is post_id\nexport const addComment=(formData,id)=> dispatch => {\n\n    const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n    \n    axios.post(`/posts/comment/${id}`, formData, config).then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:ADD_COMMENT,\n            data:response.data\n        })\n        \n        dispatch(setAlert(\"Comment added\",\"success\"));\n        \n    }).catch(err=> {\n        \n        console.log(err.response);\n        dispatch({\n            type:POST_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n//deleting a post.. id is post_id\nexport const deleteComment=(postId, commentId)=> dispatch => {\n    \n    axios.delete(`/posts/comment/${postId}/${commentId}`).then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:REMOVE_COMMENT,\n            data:response.data\n        })\n        \n        dispatch(setAlert(\"Comment removed\", \"success\"));\n        \n    }).catch(err=> {\n        \n        console.log(err.response);\n        dispatch({\n            type:POST_ERROR,\n            data:err.response.data\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}