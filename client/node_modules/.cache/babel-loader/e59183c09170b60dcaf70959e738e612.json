{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Projects/DevConnector-master/client/src/components/posts/PostItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { updateLikes, deletePost } from '../../actions/post';\n\nconst PostItem = props => {\n  console.log(props.user);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.posts.length == 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"No Posts\") : React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.posts.map(post => {\n    return React.createElement(\"div\", {\n      key: post._id,\n      className: \"post bg-white p-1 my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile/\".concat(post.user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"round-img\",\n      src: post.avatar,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, post.name))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, post.text), React.createElement(\"p\", {\n      className: \"post-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Posted on \", React.createElement(Moment, {\n      format: \"DD/MM/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, post.date), \" \"), React.createElement(\"button\", {\n      onClick: () => props.updateLikes(post._id),\n      type: \"button\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-thumbs-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), ' ', post.likes.length > 0 ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, post.likes.length) : null), React.createElement(Link, {\n      to: \"/posts/\".concat(post._id),\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Discussion\", ' ', post.comments.length > 0 ? React.createElement(\"span\", {\n      className: \"comment-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, post.comments.length) : null), post.user && post.user === props.user._id && React.createElement(\"button\", {\n      onClick: () => props.deletePost(post._id),\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  })));\n};\n\nconst mapStateToProps = state => ({\n  loading: state.auth_reducer.loading,\n  user: state.auth_reducer.user\n});\n\nexport default connect(mapStateToProps, {\n  updateLikes,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/components/posts/PostItem.js"],"names":["React","Link","Moment","moment","connect","updateLikes","deletePost","PostItem","props","console","log","user","posts","length","map","post","_id","avatar","name","text","date","likes","comments","mapStateToProps","state","loading","auth_reducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAuC,oBAAvC;;AAGA,MAAMC,QAAQ,GAAGC,KAAD,IAAU;AAGtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AAEA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,IAAoB,CAArB,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,GAED;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECL,KAAK,CAACI,KAAN,CAAYE,GAAZ,CAAgBC,IAAI,IAAG;AAEpB,WAEQ;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcD,IAAI,CAACJ,IAAnB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEI,IAAI,CAACE,MAArC;AAA6C,MAAA,GAAG,EAAC,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,IAAV,CAFJ,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBH,IAAI,CAACI,IAA1B,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoC,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BJ,IAAI,CAACK,IAAlC,CAApC,MAFF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAKZ,KAAK,CAACH,WAAN,CAAkBU,IAAI,CAACC,GAAvB,CAAtB;AAAmD,MAAA,IAAI,EAAC,QAAxD;AAAiE,MAAA,SAAS,EAAC,eAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACuC,GADvC,EAEID,IAAI,CAACM,KAAL,CAAWR,MAAX,GAAkB,CAAnB,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOE,IAAI,CAACM,KAAL,CAAWR,MAAlB,CADC,GAEG,IAJN,CAJF,EAWE,oBAAC,IAAD;AAAM,MAAA,EAAE,mBAAYE,IAAI,CAACC,GAAjB,CAAR;AAAgC,MAAA,SAAS,EAAC,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,GADb,EACmBD,IAAI,CAACO,QAAL,CAAcT,MAAd,GAAqB,CAAtB,GAChB;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCE,IAAI,CAACO,QAAL,CAAcT,MAA/C,CADgB,GAEZ,IAHN,CAXF,EAiBKE,IAAI,CAACJ,IAAL,IAAaI,IAAI,CAACJ,IAAL,KAAcH,KAAK,CAACG,IAAN,CAAWK,GAAxC,IACG;AAAQ,MAAA,OAAO,EAAE,MAAKR,KAAK,CAACF,UAAN,CAAiBS,IAAI,CAACC,GAAtB,CAAtB;AAAkD,MAAA,IAAI,EAAC,QAAvD;AAAgE,MAAA,SAAS,EAAC,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAlBN,CARF,CAFR;AAsCC,GAxCJ,CAFD,CAJA,CAFJ;AAuDH,CA5DD;;AA+DA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,OAAO,EAAED,KAAK,CAACE,YAAN,CAAmBD,OADI;AAEhCd,EAAAA,IAAI,EAAEa,KAAK,CAACE,YAAN,CAAmBf;AAFO,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAqDC,QAArD,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { updateLikes, deletePost} from '../../actions/post';\n\n\nconst PostItem= (props)=> {\n    \n    \n    console.log(props.user);\n  \n    return(\n        \n        <div>\n        \n        {(props.posts.length==0) ? <div>No Posts</div> : (\n    \n        <div className=\"posts\">\n            \n        {props.posts.map(post=> {\n        \n            return(\n                \n                    <div key={post._id} className=\"post bg-white p-1 my-1\">\n                      <div> \n                        <Link to={`/profile/${post.user}`}>\n                            <img className='round-img' src={post.avatar} alt='' />\n                            <h4>{post.name}</h4>\n                        </Link>\n                      </div>\n\n                      <div>\n                        <p className=\"my-1\">{post.text}</p>\n                        <p className=\"post-date\"> Posted on <Moment format='DD/MM/YYYY'>{post.date}</Moment> </p>\n\n                        <button onClick={()=> props.updateLikes(post._id)} type=\"button\" className=\"btn btn-light\">\n                          <i className=\"fas fa-thumbs-up\"></i>{' '}\n                          {(post.likes.length>0)? (\n                          <span>{post.likes.length}</span>\n                          ) : null}\n                        </button>\n\n                        <Link to={`/posts/${post._id}`} className=\"btn btn-primary\">\n                          Discussion{' '}{(post.comments.length>0)? (\n                          <span className='comment-count'>{post.comments.length}</span>\n                          ) : null}\n                        </Link>\n        \n                        {( post.user && post.user === props.user._id) && (   \n                            <button onClick={()=> props.deletePost(post._id)} type=\"button\" className=\"btn btn-danger\">\n                            <i className=\"fas fa-times\"></i>\n                            </button>\n                         )}\n                         \n                      </div>\n                    </div>\n        \n                )\n\n            })}\n\n        \n        </div>\n        )}\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n  loading: state.auth_reducer.loading,\n  user: state.auth_reducer.user\n});\n\nexport default connect(mapStateToProps, { updateLikes, deletePost})(PostItem);\n\n\n"]},"metadata":{},"sourceType":"module"}