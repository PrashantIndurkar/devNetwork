{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Projects/DevConnector-master/client/src/components/posts/Posts.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\nimport { loadUser } from '../../actions/auth';\nimport store from '../../store';\n\nconst Posts = props => {\n  //i'm loading authenticated user here before loading all posts, because loading a user (in App.js) is taking more time as compared to that of loading the posts (here).\n  //so before doing it, props.user._id was undefined because user was loading after loading of posts.\n  //now, here user is loading before loading of posts, so props.user._id is defined now.\n  //despite of this, sometimes (1 out of 10) posts are loaded before user, while refreshing.\n  //->from next time, you should use async await...\n  //this problem could be solved by delaying, so in that time user will be loaded also (in App.js)\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  useEffect(() => {\n    store.dispatch(getPosts());\n  }, []);\n  console.log(props.posts);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"loading...\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \"Welcome to the community\"), React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(PostItem, {\n    posts: props.posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  posts: state.post_reducer.posts,\n  loading: state.post_reducer.loading\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/components/posts/Posts.js"],"names":["React","useEffect","connect","PostItem","PostForm","getPosts","loadUser","store","Posts","props","dispatch","console","log","posts","loading","mapStateToProps","state","post_reducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAGA,MAAMC,KAAK,GAAEC,KAAD,IAAU;AAElB;AACA;AACA;AACA;AACJ;AACI;AAECR,EAAAA,SAAS,CAAC,MAAM;AACTM,IAAAA,KAAK,CAACG,QAAN,CAAeJ,QAAQ,EAAvB;AACL,GAFO,EAEL,EAFK,CAAT;AAIDL,EAAAA,SAAS,CAAC,MAAM;AACRM,IAAAA,KAAK,CAACG,QAAN,CAAeL,QAAQ,EAAvB;AACL,GAFM,EAEJ,EAFI,CAAT;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAlB;AAEA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,KAAK,CAACK,OAAP,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlB,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEC;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,6BAFD,EAIC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAKC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAK,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAHL,CAFJ;AAgBH,CAnCD;;AAqCA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BH,EAAAA,KAAK,EAAEG,KAAK,CAACC,YAAN,CAAmBJ,KADI;AAE9BC,EAAAA,OAAO,EAACE,KAAK,CAACC,YAAN,CAAmBH;AAFG,CAAL,CAA7B;;AAMA,eAAeZ,OAAO,CAACa,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAAqCG,KAArC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\nimport { loadUser } from '../../actions/auth';\nimport store from '../../store';\n\n\nconst Posts=(props)=> {\n    \n    //i'm loading authenticated user here before loading all posts, because loading a user (in App.js) is taking more time as compared to that of loading the posts (here).\n    //so before doing it, props.user._id was undefined because user was loading after loading of posts.\n    //now, here user is loading before loading of posts, so props.user._id is defined now.\n    //despite of this, sometimes (1 out of 10) posts are loaded before user, while refreshing.\n//->from next time, you should use async await...\n    //this problem could be solved by delaying, so in that time user will be loaded also (in App.js)\n    \n     useEffect(() => {\n            store.dispatch(loadUser());\n      }, []);\n    \n    useEffect(() => {\n            store.dispatch(getPosts());\n      }, []);\n    \n    console.log(props.posts);\n    \n    return( \n        \n        <div>\n        {(props.loading) ? <div>loading...</div> : (\n         \n             <div>\n              <h1 className='large text-primary'>Posts</h1>\n              <p className='lead'><i className='fas fa-user' />Welcome to the community</p>\n\n              <PostForm/>\n              <PostItem posts={props.posts} />\n            </div>\n         \n         )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    posts: state.post_reducer.posts,\n    loading:state.post_reducer.loading\n});\n\n\nexport default connect(mapStateToProps, {getPosts})(Posts);"]},"metadata":{},"sourceType":"module"}