{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Projects/DevConnector-master/client/src/components/auth/Register.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Link, Redirect, withRouter } from 'react-router-dom'; //importing actions\n\nimport { register } from '../../actions/auth';\nimport { loadUser } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\" //this input data doesn't have any use, so it is not included into redux\n      //all the useful data is only..the data saved in database, so they are included in redux\n      //and can be accessed anywhere\n\n    };\n\n    this.handleName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleConfirmPassword = event => {\n      this.setState({\n        confirmPassword: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.password !== this.state.confirmPassword) {\n        this.props.setAlert(\"passwords not matching\", 'danger');\n        this.setState({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n        return;\n      }\n\n      const user = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.register(user, this.props.history); //            const config= {\n      //                headers:{\n      //                    'Content-Type':'application/json'\n      //                }\n      //            }\n      //            const body= JSON.stringify(user);\n      //            \n      //            axios.post('/users/register',body, config).then((response)=> {\n      //                console.log(response);\n      //            }).catch(err=> {\n      //                console.log(err);\n      //            })\n\n      this.setState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    };\n\n    this.componentDidMount = () => {\n      console.log(this.props);\n    };\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    } //when a page is reloaded or moving to any url.. user-> unAuthenticated & loading-> true (i.e. default state)\n    //this is used to hide the view of ..say intermediate components\n\n\n    if (!this.props.isAuthenticated && this.props.loading) {\n      return \"loading....\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"large text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), \" Create Your Account\"), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"name\",\n      onChange: this.handleName,\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email Address\",\n      name: \"email\",\n      onChange: this.handleEmail,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      className: \"form-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      onChange: this.handlePassword,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"password2\",\n      onChange: this.handleConfirmPassword,\n      value: this.state.confirmPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Sign In\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loading: state.auth_reducer.loading,\n  isAuthenticated: state.auth_reducer.isAuthenticated\n}); //connect is used to connect this component and actions & state...\n//by using this line, actions can be accessed as... this.props.register\n\n\nexport default connect(mapStateToProps, {\n  register,\n  setAlert,\n  loadUser\n})(withRouter(Register));","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/components/auth/Register.js"],"names":["React","Component","axios","connect","Link","Redirect","withRouter","register","loadUser","setAlert","Register","constructor","state","name","email","password","confirmPassword","handleName","event","setState","target","value","handleEmail","handlePassword","handleConfirmPassword","handleSubmit","preventDefault","props","user","history","componentDidMount","console","log","render","isAuthenticated","loading","mapStateToProps","auth_reducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {Link, Redirect, withRouter} from 'react-router-dom';\n//importing actions\nimport {register} from '../../actions/auth';\nimport {loadUser} from '../../actions/auth';\nimport {setAlert} from '../../actions/alert';\n\n\n\nclass Register extends Component{\n    \n    constructor(){\n        super();\n        this.state={\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n        }\n        \n        //this input data doesn't have any use, so it is not included into redux\n        //all the useful data is only..the data saved in database, so they are included in redux\n        //and can be accessed anywhere\n        \n        this.handleName=(event)=> {\n            \n            this.setState({\n                name:event.target.value\n            })\n        }\n        \n        this.handleEmail=(event)=> {\n            \n            this.setState({\n                email:event.target.value\n            })\n        }\n        \n        this.handlePassword=(event)=> {\n            \n            this.setState({\n                password:event.target.value\n            })\n        }\n        \n        this.handleConfirmPassword=(event)=> {\n            \n            this.setState({\n                confirmPassword:event.target.value\n            })\n        }\n        \n        this.handleSubmit=(event)=> {\n            event.preventDefault();\n            \n            if(this.state.password !== this.state.confirmPassword){\n                this.props.setAlert(\"passwords not matching\",'danger');\n                this.setState({\n                    name:\"\",\n                    email:\"\",\n                    password:\"\",\n                    confirmPassword:\"\",\n                })\n                return;\n            }\n            \n            const user={\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n            }\n            \n            this.props.register(user, this.props.history);\n        \n//            const config= {\n//                headers:{\n//                    'Content-Type':'application/json'\n//                }\n//            }\n//            const body= JSON.stringify(user);\n//            \n//            axios.post('/users/register',body, config).then((response)=> {\n//                console.log(response);\n//            }).catch(err=> {\n//                console.log(err);\n//            })\n            \n            this.setState({\n                name:\"\",\n                email:\"\",\n                password:\"\",\n                confirmPassword:\"\",\n            })\n            \n        }\n        \n        this.componentDidMount=()=> {\n            console.log(this.props);\n        }\n    }\n    \n    \n    \n\nrender(){\n    \n\n    if (this.props.isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n      }\n    \n    //when a page is reloaded or moving to any url.. user-> unAuthenticated & loading-> true (i.e. default state)\n    //this is used to hide the view of ..say intermediate components\n    if(! this.props.isAuthenticated && this.props.loading){\n        return \"loading....\"\n    }\n\n    return(\n    \n        <div>\n          <h1 className=\"large text-primary\">Sign Up</h1>\n          <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={this.handleName} value={this.state.name} />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"email\" placeholder=\"Email Address\" name=\"email\" onChange={this.handleEmail} value={this.state.email}  />\n              <small className=\"form-text\"\n                >This site uses Gravatar so if you want a profile image, use a\n                Gravatar email</small\n              >\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n              \n                onChange={this.handlePassword}\n                value={this.state.password}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                name=\"password2\"\n                \n                onChange={this.handleConfirmPassword}\n                value={this.state.confirmPassword}\n              />\n            </div>\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n          </form>\n          <p className=\"my-1\">\n            Already have an account? <Link to=\"/login\">Sign In</Link>\n          </p>\n        </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  loading:state.auth_reducer.loading,\n  isAuthenticated: state.auth_reducer.isAuthenticated\n}); \n\n//connect is used to connect this component and actions & state...\n//by using this line, actions can be accessed as... this.props.register\nexport default connect(mapStateToProps, {register,setAlert,loadUser})(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}