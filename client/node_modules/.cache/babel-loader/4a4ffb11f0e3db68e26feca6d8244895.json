{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Projects/DevConnector-master/client/src/components/profile/ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport { getGithubRepos } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport store from '../../store';\n\nconst ProfileGithub = props => {\n  useEffect(() => {\n    store.dispatch(getGithubRepos(props.profile.githubusername));\n  }, []); //    console.log(props.repos);\n\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \" Github Repos\"), props.repos ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.repos.map(repo => {\n    return React.createElement(\"div\", {\n      key: repo.id,\n      className: \"repo bg-white p-1 my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, repo.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, repo.description)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Stars: \", repo.stargazers_count), React.createElement(\"li\", {\n      className: \"badge badge-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Watchers: \", repo.watchers_count), React.createElement(\"li\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Forks: \", repo.forks_count))));\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"No Repositories\"));\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile_reducer.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","getGithubRepos","Link","connect","store","ProfileGithub","props","dispatch","profile","githubusername","repos","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","mapStateToProps","state","profile_reducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,aAAa,GAAGC,KAAD,IAAU;AAE3BN,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACG,QAAN,CAAeN,cAAc,CAACK,KAAK,CAACE,OAAN,CAAcC,cAAf,CAA7B;AACH,GAFQ,EAEN,EAFM,CAAT,CAF2B,CAM/B;;AAEI,SACK;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kBAFL,EAMOH,KAAK,CAACI,KAAP,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAG;AAEvB,WACG;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,MAAA,SAAS,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAG,MAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,MAAA,MAAM,EAAC,QAA/B;AAAwC,MAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmEF,IAAI,CAACG,IAAxE,CAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACI,WAAT,CAFF,CAFH,EAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4CJ,IAAI,CAACK,gBAAjD,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4CL,IAAI,CAACM,cAAjD,CAFF,EAGE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0CN,IAAI,CAACO,WAA/C,CAHF,CADF,CAPH,CADH;AAkBD,GApBC,CADD,CAFF,GA0BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhCT,CADL;AAsCH,CA9CD;;AAiDA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,KAAK,EAACW,KAAK,CAACC,eAAN,CAAsBZ;AADI,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACiB,eAAD,EAAiB;AAAEnB,EAAAA;AAAF,CAAjB,CAAP,CAA4CI,aAA5C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { getGithubRepos } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport store from '../../store';\n\nconst ProfileGithub= (props)=> {\n    \n    useEffect(() => {\n        store.dispatch(getGithubRepos(props.profile.githubusername));\n    }, []);\n    \n//    console.log(props.repos);\n    \n    return(\n         <div className=\"profile-github\"> \n         \n              <h2 className=\"text-primary my-1\">\n                <i className=\"fab fa-github\"></i> Github Repos\n              </h2>\n        \n              {(props.repos) ? (\n        \n                 <div>\n                 {props.repos.map(repo=> { \n                  \n                  return(\n                     <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n\n                        <div>\n                          <h4><a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a></h4>\n                          <p>{repo.description}</p>\n                        </div>\n\n                        <div>\n                          <ul>\n                            <li className=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\n                            <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\n                            <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n                          </ul>\n                        </div> \n\n                     </div>\n                  )       \n                })}\n                </div>\n\n              ) : <div>No Repositories</div> }\n      \n        </div>\n           \n    )\n}\n\n\nconst mapStateToProps = state => ({\n  repos:state.profile_reducer.repos,\n});\n\nexport default connect(mapStateToProps,{ getGithubRepos })(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}