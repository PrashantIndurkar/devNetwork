{"ast":null,"code":"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, LOGOUT, GET_PROFILES, GET_REPOS } from './types';\nimport { setAlert } from './alert';\nimport axios from 'axios'; //getting profile of mine (authenticated user)\n\nexport const getCurrentProfile = () => dispatch => {\n  axios.get('/profiles/my_profile').then(response => {\n    console.log(response.data);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      data: err.response.data\n    });\n  });\n}; //getting all profiles\n\nexport const getProfiles = () => dispatch => {\n  axios.get('/profiles').then(response => {\n    console.log(response);\n    dispatch({\n      type: GET_PROFILES,\n      data: response.data\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      data: err.response.data\n    });\n  });\n}; //getting profile of each user by... user_id\n\nexport const getProfileById = id => dispatch => {\n  axios.get(\"/profiles/user/\".concat(id)).then(response => {\n    console.log(response);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      data: err.response.data\n    });\n  });\n}; //creating my profile\n\nexport const createProfile = (formData, history) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.post('/profiles/create', formData, config).then(response => {\n    console.log(response);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n    dispatch(setAlert('Profile Created', 'success'));\n    history.push('/dashboard');\n  }).catch(err => {\n    console.log(err.response.data);\n    let errors = err.response.data;\n    errors.forEach(error => {\n      dispatch(setAlert(error.message, \"danger\"));\n    });\n  });\n}; //editing my profile\n\nexport const editProfile = (formData, history) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.put('/profiles/edit_profile', formData, config).then(response => {\n    console.log(response);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n    dispatch(setAlert('Profile Updated', 'success'));\n    history.push('/dashboard');\n  }).catch(err => {\n    console.log(err.response.data);\n    let errors = err.response.data;\n    errors.forEach(error => {\n      dispatch(setAlert(error.message, \"danger\"));\n    });\n  });\n}; //adding experience to my profile\n\nexport const addExperience = (formData, history) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.put('/profiles/experience', formData, config).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  }).catch(err => {\n    console.log(err.response.data); //        let errors= err.response.data;\n    //        errors.forEach(error=> {\n    //            dispatch(setAlert(error.message,\"danger\"));\n    //        })\n  });\n}; //adding education to my profile\n\nexport const addEducation = (formData, history) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.put('/profiles/education', formData, config).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  }).catch(err => {\n    console.log(err.response.data); //        let errors= err.response.data;\n    //        errors.forEach(error=> {\n    //            dispatch(setAlert(error.message,\"danger\"));\n    //        })\n  });\n}; //deleting my experience\n\nexport const deleteExperience = id => dispatch => {\n  axios.delete(\"/profiles/experience/\".concat(id)).then(response => {\n    console.log(response);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n    dispatch(setAlert('Experience deleted', 'success'));\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      data: err.response.data\n    });\n  });\n}; //deleting my education\n\nexport const deleteEducation = id => dispatch => {\n  axios.delete(\"/profiles/education/\".concat(id)).then(response => {\n    console.log(response);\n    dispatch({\n      type: GET_PROFILE,\n      data: response.data\n    });\n    dispatch(setAlert('Education deleted', 'success'));\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      data: err.response.data\n    });\n  });\n}; // Delete account & profile\n\nexport const deleteAccount = history => dispatch => {\n  if (window.confirm('Are you sure to delete your account?')) {\n    axios.delete('/profiles/delete').then(response => {\n      console.log(response.data);\n      window.location.reload();\n      dispatch(setAlert('Your account has been deleted')); //          axios.get('/users/logout').then(response=> {\n      //            dispatch({\n      //                type:LOGOUT\n      //            });\n      //          })\n    }).catch(err => {\n      console.log(err.response);\n      dispatch({\n        type: PROFILE_ERROR,\n        data: err.response.data\n      });\n    });\n  }\n}; //getting github repos of a user by... github_username\n\nexport const getGithubRepos = username => dispatch => {\n  axios.get(\"/profiles/github/\".concat(username)).then(response => {\n    console.log(response);\n    dispatch({\n      type: GET_REPOS,\n      data: response.data\n    });\n  }).catch(err => {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      data: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/prashant/Projects/DevConnector-master/client/src/actions/profile.js"],"names":["GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","LOGOUT","GET_PROFILES","GET_REPOS","setAlert","axios","getCurrentProfile","dispatch","get","then","response","console","log","data","type","catch","err","getProfiles","getProfileById","id","createProfile","formData","history","config","headers","post","push","errors","forEach","error","message","editProfile","put","addExperience","addEducation","deleteExperience","delete","deleteEducation","deleteAccount","window","confirm","location","reload","getGithubRepos","username"],"mappings":"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","sourcesContent":["import {GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, LOGOUT, GET_PROFILES, GET_REPOS} from './types';\nimport {setAlert }from './alert';\nimport axios from 'axios';\n\n\n//getting profile of mine (authenticated user)\nexport const getCurrentProfile= ()=> dispatch=> {\n    \n    axios.get('/profiles/my_profile').then(response=> {\n        \n        console.log(response.data);\n        dispatch({\n            type:GET_PROFILE,\n            data:response.data\n        })\n    }).catch(err=> {\n        console.log(err.response);\n        dispatch({\n            type:PROFILE_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n//getting all profiles\nexport const getProfiles=()=> dispatch=>{\n    \n    \n    axios.get('/profiles').then(response=> {\n        console.log(response);\n        \n        dispatch({\n            type:GET_PROFILES,\n            data:response.data\n        })\n    }).catch(err=> {\n        console.log(err.response);\n        dispatch({\n            type:PROFILE_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n//getting profile of each user by... user_id\nexport const getProfileById=(id)=> dispatch=>{\n    \n    axios.get(`/profiles/user/${id}`).then(response=> {\n        console.log(response);\n        \n        dispatch({\n            type:GET_PROFILE,\n            data:response.data\n        })\n    }).catch(err=> {\n        console.log(err.response);\n        dispatch({\n            type:PROFILE_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n\n//creating my profile\nexport const createProfile= (formData, history)=> dispatch=> {\n    \n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    axios.post('/profiles/create',formData, config).then(response=> {\n        console.log(response);\n        \n        dispatch({\n          type: GET_PROFILE,\n          data: response.data\n        });\n\n        dispatch(setAlert('Profile Created', 'success'));\n        history.push('/dashboard');  \n        \n    }).catch(err=> {\n        console.log(err.response.data);\n        \n        let errors= err.response.data;\n        errors.forEach(error=> {\n            dispatch(setAlert(error.message,\"danger\"));\n        })\n    })\n}\n\n\n//editing my profile\nexport const editProfile= (formData, history)=> dispatch=> {\n    \n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    axios.put('/profiles/edit_profile',formData, config).then(response=> {\n        console.log(response);\n        \n        dispatch({\n          type: GET_PROFILE,\n          data: response.data\n        });\n\n        dispatch(setAlert('Profile Updated', 'success'));\n        history.push('/dashboard');  \n        \n    }).catch(err=> {\n        console.log(err.response.data);\n        \n        let errors= err.response.data;\n        errors.forEach(error=> {\n            dispatch(setAlert(error.message,\"danger\"));\n        })\n    })\n}\n\n\n\n//adding experience to my profile\nexport const addExperience=(formData, history)=> dispatch=>{\n     \n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    axios.put('/profiles/experience', formData, config).then(response=> {\n        \n        console.log(response.data);\n        \n        dispatch({\n            type:GET_PROFILE,\n            data:response.data\n        })\n        dispatch(setAlert('Experience Added', 'success'));\n        history.push('/dashboard');\n        \n    }).catch(err=> {\n        console.log(err.response.data);\n        \n//        let errors= err.response.data;\n//        errors.forEach(error=> {\n//            dispatch(setAlert(error.message,\"danger\"));\n//        })\n    })\n}\n\n\n\n//adding education to my profile\nexport const addEducation=(formData, history)=> dispatch=>{\n     \n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    axios.put('/profiles/education', formData, config).then(response=> {\n        \n        console.log(response.data);\n        \n        dispatch({\n            type:GET_PROFILE,\n            data:response.data\n        })\n        \n        dispatch(setAlert('Education Added', 'success'));\n        history.push('/dashboard');\n        \n    }).catch(err=> {\n        console.log(err.response.data);\n        \n//        let errors= err.response.data;\n//        errors.forEach(error=> {\n//            dispatch(setAlert(error.message,\"danger\"));\n//        })\n    })\n}\n\n\n//deleting my experience\nexport const deleteExperience= (id)=> dispatch=> {\n    \n    axios.delete(`/profiles/experience/${id}`).then(response=> {\n        \n        console.log(response);\n        \n        dispatch({\n            type:GET_PROFILE,\n            data:response.data\n        })\n        dispatch(setAlert('Experience deleted', 'success'));\n    }).catch(err=> {\n        console.log(err.response);\n        dispatch({\n            type:PROFILE_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n//deleting my education\nexport const deleteEducation= (id)=> dispatch=> {\n    \n    axios.delete(`/profiles/education/${id}`).then(response=> {\n        \n        console.log(response);\n        \n        dispatch({\n            type:GET_PROFILE,\n            data:response.data\n        })\n        dispatch(setAlert('Education deleted', 'success'));\n    }).catch(err=> {\n        console.log(err.response);\n        dispatch({\n            type:PROFILE_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n// Delete account & profile\nexport const deleteAccount = (history) => dispatch => {\n    \n  if (window.confirm('Are you sure to delete your account?')) {\n        \n        axios.delete('/profiles/delete').then(response=> {\n          console.log(response.data);\n          \n          window.location.reload(); \n          dispatch(setAlert('Your account has been deleted')); \n          \n//          axios.get('/users/logout').then(response=> {\n//            dispatch({\n//                type:LOGOUT\n//            });\n//          })\n        \n        }).catch (err=>{\n            console.log(err.response);\n            dispatch({\n                type:PROFILE_ERROR,\n                data:err.response.data\n            })\n        })           \n  }\n};\n\n\n//getting github repos of a user by... github_username\nexport const getGithubRepos=(username)=> dispatch=>{\n    \n    axios.get(`/profiles/github/${username}`).then(response=> {\n        console.log(response);\n        \n        dispatch({\n            type:GET_REPOS,\n            data:response.data\n        })\n    }).catch(err=> {\n        console.log(err.response);\n        dispatch({\n            type:PROFILE_ERROR,\n            data:err.response.data\n        })\n    })\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}